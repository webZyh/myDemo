----------------------------------------------------------
chapter2

加快页面加载的速度
	1、使用外部引用js代码；浏览器能够根据具体的设置缓存链接的所有外部 JavaScript 文件

文档模式
	混杂模式（quirks mode）和标准模式（standards mode）
----------------------------------------------------------
chapter3

所谓标识符，就是指变量、函数、属性的名字，或者函数的参数。
	> 第一个字符必须是一个字母、下划线（_）或一个美元符号（$）；
	> 其他字符可以是字母、下划线、美元符号或数字。  
ECMAScript 标识符采用驼峰大小写格式，也就是第一个字母小写，剩下的每个单词的
首字母大写

省略 var 操作符，从而创建一个全局变量

Undefined 类型只有一个值，即特殊的 undefined。

Null 类型是第二个只有一个值的数据类型，这个特殊的值是 null，从逻辑角度来看，null 值表示一个空对象指针，而这也正是使用 typeof 操作符检测 null 值时会返回"object"的原因。如果定义的变量准备在将来用于保存对象，那么最好将该变量初始化为 null 而不是其他值。

***Undefined和null的区别：实际上，undefined值是派生自null值的，因此ECMA-262规定对它们的相等性测试要返回 true，尽管 null 和 undefined 有这样的关系，但它们的用途完全不同，无论在什么情况下都没有必要把一个变量的值显式地设置为 undefined，可是同样的规则对 null 却不适用。只要意在保存对象的变量还没有真正保存对象，就应该明确地让该变量保存 null 值。这样做可以体现 null 作为空对象指针的惯例，

八进制字面值的第一位必须是零（0），然后是八进制数字序列（0～7）。如果字面值中的数值超出了范围，那么前导零将被忽略，后面的数值将被当作十进制数值解析。
十六进制字面值的前两位必须是 0x，后跟任何十六进制数字（0～9 及 A～F）

NaN，即非数值（Not a Number）是一个特殊的数值，这个数值用于表示一个本来要返回数值的操作数
未返回数值的情况（这样就不会抛出错误了）。任何数值除以 0会返回 NaN①  。首先，任何涉及 NaN 的操作（例如 NaN/10）都会返回 NaN；其次，NaN 与任何值都不相等，包括 NaN 本身
① 原书如此，但实际上只有 0 除以 0 才会返回 NaN，正数除以 0 返回 Infinity，负数除以 0 返回-Infinity。
ECMAScript 定义了 isNaN()函数。这个函数接受一个参数，该参数可以是任何类型，而函数会帮我们确定这个参数是否“不是数值”。

转型函数Boolean() 	将一个值转换为其对应的 Boolean 值
转型函数Number() parseInt() parseFloat()	转型函数 Number()可以用于任何数据类型，而另两个函数则专门用于把字符串转换成数值
转型函数 String() 这个函数能够将任何类型的值转换为字符串。如果值有 toString()方法，则调用该方法（没有参数）并返回相应的结果；如果值是 null，则返回"null"；如果值是 undefined，则返回"undefined"。

String类型
要把一个值转换为一个字符串有两种方式。第一种是使用几乎每个值都有的 toString()方法
数值、布尔值、对象和字符串值都有 toString()方法。但 null 和 undefined 值没有这个方法。
（多数情况下，调用 toString()方法不必传递参数。但是，在调用数值的 toString()方法时，可以传递一个参数：输出数值的基数。）
第二种是转型函数 String()		要把某个值转换为字符串，可以使用加号操作符（3.5 节讨论）把它与一个字符串（""）加在一起。

Object类型
ECMAScript 中的对象其实就是一组数据和功能的集合。
Object 的每个实例都具有下列属性和方法。
	constructor	保存着用于创建当前对象的函数
	hasOwnProperty(propertyName)	用于检查给定的属性在当前对象实例中（而不是在实例的原型中）是否存在。
	isPrototypeOf(object)	用于检查传入的对象是否是传入对象的原型
	propertyIsEnumerable(propertyName)	用于检查给定的属性是否能够使用 for-in 语句来枚举
	toLocaleString()：返回对象的字符串表示，该字符串与执行环境的地区对应。
	toString()：返回对象的字符串表示。
	valueOf()：返回对象的字符串、数值或布尔值表示。通常与 toString()方法的返回值相同。
***创建对象的方法：
1、var o = new Object();

----------------------------------------------------------
chapter6

var person = {}
Object.defineProperty(person,name,{
	configurable
	Enumerable
	Writable
	Value
})